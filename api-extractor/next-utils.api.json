{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.10",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@asl-19/next-utils!",
  "docComment": "/**\n * Shared Next.js utility functions for ASL19 projects.\n *\n * @packageDocumentation\n */\n",
  "name": "@asl-19/next-utils",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@asl-19/next-utils!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@asl-19/next-utils!getNextJsHeaders:function(1)",
          "docComment": "/**\n * Get Next.js headers array from object containing header values by name.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getNextJsHeaders: (headers: "
            },
            {
              "kind": "Content",
              "text": "{\n    [headerName: string]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "NextJsHeadersArray",
              "canonicalReference": "@asl-19/next-utils!~NextJsHeadersArray:type"
            }
          ],
          "fileUrlPath": "src/getNextJsHeaders.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "headers",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getNextJsHeaders"
        },
        {
          "kind": "Function",
          "canonicalReference": "@asl-19/next-utils!replaceCurrentRouteWithShallowRoute:function(1)",
          "docComment": "/**\n * [Replace] the current route with a [shallow route].\n *\n * @remarks\n *\n * This is useful to set the replace this initial route of shallow-routed pages (e.g. index pages with custom shallow routing logic) with a shallow route.\n *\n * Without this change if the user uses the back button/gesture to return to the initial route of a page driven by shallow routing Next.js will do an unnecessary full page load (running getServerSideProps and displaying the global loading indicator rather than the page-specific loading indicator). This isn’t inherently a problem but it’s a confusing user experience.\n *\n * Ideally Next.js add more sophisticated routing capabilities to remove the need for workarounds like this.\n *\n * [replace]: https://nextjs.org/docs/api-reference/next/router#routerreplace [shallow route]: https://nextjs.org/docs/routing/shallow-routing\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "replaceCurrentRouteWithShallowRoute: ({ router, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    router: "
            },
            {
              "kind": "Reference",
              "text": "NextRouter",
              "canonicalReference": "next!NextRouter:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            }
          ],
          "fileUrlPath": "src/replaceCurrentRouteWithShallowRoute.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ router, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "replaceCurrentRouteWithShallowRoute"
        },
        {
          "kind": "Function",
          "canonicalReference": "@asl-19/next-utils!useHrefIsActive:function(1)",
          "docComment": "/**\n * Determine if the passed `href` is active based on its pathname and a whitelist of query string keys.\n *\n * Returns true if `href`’s pathname (the part before the query string) matches the router’s pathname (parsed from `router.asPath`) and the value of each of the `activeUrlComparisonQueryKeys` matches the values in `router.query`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useHrefIsActive: ({ activeUrlComparisonQueryKeys, href, webPublicUrl, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    activeUrlComparisonQueryKeys: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n    href: string;\n    webPublicUrl: string;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "boolean"
            }
          ],
          "fileUrlPath": "src/useHrefIsActive.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ activeUrlComparisonQueryKeys, href, webPublicUrl, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "useHrefIsActive"
        }
      ]
    }
  ]
}
